sequenceDiagram
    participant GL as GameLoop
    participant J as Jogador
    participant M as Mao
    participant C as Carta
    participant G as Jogo
    participant B as Baralho
    participant CD as Cidade

    title Fluxo de Turno do Jogador

    GL->>G: Início do turno do jogador_atual
    activate G
    G-->>GL: Retorna estado atual do jogo (para exibição)
    deactivate G

    Note over GL,J: Jogador decide usar uma carta de ação (ex: Tratar Doença)

    GL->>J: get mao
    activate J
    J->>M: get cartas
    activate M
    M-->>J: retorna lista de cartas
    deactivate M
    J-->>GL: retorna mao
    deactivate J

    Note over GL,C: GameLoop seleciona a carta e chama seu método ativar()

    GL->>C: ativar(jogo=G, jogador=J, **kwargs)
    activate C
    C->>J: get posicao
    activate J
    J-->>C: retorna cidade_atual
    deactivate J
    C->>CD: reduzir_nivel_doenca(cor, 1)
    activate CD
    deactivate CD
    C-->>GL: retorna sucesso=true
    deactivate C

    GL->>M: remover_carta(carta)
    activate M
    deactivate M
    GL->>G: decrementar acoes_restantes
    activate G
    deactivate G

    Note over GL,G: Jogador passa o turno ou ações acabam

    GL->>G: proximo_turno()
    activate G
    G->>G: executar_fases_fim_turno()
    activate G

    Note over G,B: Fase de Compra de Cartas
    loop 2 vezes
        G->>B: comprar_carta()
        activate B
        B-->>G: retorna carta_comprada
        deactivate B
        alt carta_comprada é Epidemia
            G->>C: ativar(jogo=G, jogador=J)
        else
            G->>J: get mao
            activate J
            J->>M: adicionar_carta(carta_comprada)
            activate M
            deactivate M
            deactivate J
        end
    end

    Note over G,CD: Fase de Infecção
    G->>G: fase_infeccao()
    activate G
    G->>CD: adicionar_nivel_doenca(cor, 1, set())
    activate CD
    opt Surto (Outbreak)
        CD->>CD: propagar_doenca(cor, outbreak_cities)
    end
    deactivate CD
    deactivate G

    deactivate G

    G->>G: verificar_condicoes_finais()
    G-->>GL:
    deactivate G
